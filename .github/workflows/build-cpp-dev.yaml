name: Build & Push cpp-dev (multi-arch, native runners)

on:
  push:
    paths:
      - "workspace-images/cpp-dev/**"
      - ".github/workflows/build-cpp-dev.yaml"
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

env:
  REGION: us-central1
  GCP_PROJECT: coder-nt
  REPO: workspace-images
  IMAGE_NAME: cpp-dev

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: linux/amd64
            runs_on: ubuntu-latest
          - platform: linux/arm64
            runs_on: ubuntu-24.04-arm   # native ARM64 runner
    runs-on: ${{ matrix.runs_on }}
    steps:
      - uses: actions/checkout@v4

      # ── Auth to Google Cloud ──────────────────────────────────────────
      - name: Auth to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ env.GCP_PROJECT }}

      - uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT }}

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      - name: Compute image coords
        run: |
          echo "REG=${{ env.REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT }}/${{ env.REPO }}" >> $GITHUB_ENV
          echo "IMG=${{ env.REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT }}/${{ env.REPO }}/${{ env.IMAGE_NAME }}" >> $GITHUB_ENV
          echo "SHA_SHORT=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Build single-arch on a native runner, push by digest (no manifest yet)
      - name: Build & push by digest (${{ matrix.platform }})
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: workspace-images/cpp-dev/Dockerfile
          platforms: ${{ matrix.platform }}
          # name-canonical=true ensures full ref IMG@sha256:...
          tags: ${{ env.REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT }}/${{ env.REPO }}/${{ env.IMAGE_NAME }}
          outputs: type=image,push-by-digest=true,name-canonical=true,push=true
          cache-from: type=gha,ref=${{ env.IMG }}:buildcache
          cache-to: type=gha,ref=${{ env.IMG }}:buildcache,mode=max

      - name: Export digest file
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: Upload digest artifact
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ matrix.platform == 'linux/amd64' && 'linux-amd64' || 'linux-arm64' }}
          path: ${{ runner.temp }}/digests/*
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      # ── Auth to Google Cloud ──────────────────────────────────────────
      - name: Auth to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ env.GCP_PROJECT }}

      - uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT }}

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      - name: Compute image coords
        run: |
          echo "REG=${{ env.REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT }}/${{ env.REPO }}" >> $GITHUB_ENV
          echo "IMG=${{ env.REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT }}/${{ env.REPO }}/${{ env.IMAGE_NAME }}" >> $GITHUB_ENV
          echo "SHA_SHORT=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-*
          merge-multiple: true

      - name: Create and push multi-arch manifest
        working-directory: ${{ runner.temp }}/digests
        run: |
          set -eux
          refs=""
          for d in *; do
            refs="$refs ${IMG}@sha256:${d}"
          done
          docker buildx imagetools create \
            -t "${IMG}:latest" \
            -t "${IMG}:${SHA_SHORT}" \
            $refs

      - name: Inspect final image
        run: docker buildx imagetools inspect "${IMG}:latest"