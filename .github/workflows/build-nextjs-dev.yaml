name: Build & Push nextjs-dev (multi-arch, native runners)

on:
  push:
    paths:
      - "workspace-images/nextjs-dev/**"
      - ".github/workflows/build-nextjs-dev.yaml"
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

env:
  REGION: us-central1
  GCP_PROJECT: coder-nt
  REPO: workspace-images
  IMAGE_NAME: nextjs-dev

jobs:
  # Build on native runners for optimal performance, but don't push intermediate images
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: linux/amd64
            runs_on: ubuntu-latest
          - platform: linux/arm64
            runs_on: ubuntu-24.04-arm   # native ARM64 runner
    runs-on: ${{ matrix.runs_on }}
    steps:
      - uses: actions/checkout@v4

      - name: Compute image coords
        run: |
          echo "REG=${{ env.REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT }}/${{ env.REPO }}" >> $GITHUB_ENV
          echo "IMG=${{ env.REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT }}/${{ env.REPO }}/${{ env.IMAGE_NAME }}" >> $GITHUB_ENV
          echo "SHA_SHORT=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Build single-arch natively, but only cache - don't push
      - name: Build & cache (${{ matrix.platform }})
        uses: docker/build-push-action@v6
        with:
          context: .
          file: workspace-images/nextjs-dev/Dockerfile
          platforms: ${{ matrix.platform }}
          push: false  # Don't push intermediate images
          cache-from: type=gha,ref=${{ env.IMG }}:buildcache-${{ matrix.platform == 'linux/amd64' && 'amd64' || 'arm64' }}
          cache-to: type=gha,ref=${{ env.IMG }}:buildcache-${{ matrix.platform == 'linux/amd64' && 'amd64' || 'arm64' }},mode=max

  # Single job to create and push the multi-arch manifest using cached layers
  push:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      # ── Auth to Google Cloud ──────────────────────────────────────────
      - name: Auth to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ env.GCP_PROJECT }}

      - uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT }}

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      - name: Compute image coords
        run: |
          echo "REG=${{ env.REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT }}/${{ env.REPO }}" >> $GITHUB_ENV
          echo "IMG=${{ env.REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT }}/${{ env.REPO }}/${{ env.IMAGE_NAME }}" >> $GITHUB_ENV
          echo "SHA_SHORT=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Single multi-arch build using cached layers from both architectures
      - name: Build & push multi-arch image (using cached layers)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: workspace-images/nextjs-dev/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT }}/${{ env.REPO }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT }}/${{ env.REPO }}/${{ env.IMAGE_NAME }}:sha-${{ env.SHA_SHORT }}
          cache-from: |
            type=gha,ref=${{ env.IMG }}:buildcache-amd64
            type=gha,ref=${{ env.IMG }}:buildcache-arm64
          provenance: false
          sbom: false

      - name: Inspect final image
        run: docker buildx imagetools inspect "${{ env.IMG }}:latest"